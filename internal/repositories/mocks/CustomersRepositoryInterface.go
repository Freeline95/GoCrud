// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	models "github.com/Freeline95/GoCrud/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// CustomersRepositoryInterface is an autogenerated mock type for the CustomersRepositoryInterface type
type CustomersRepositoryInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: customer
func (_m *CustomersRepositoryInterface) Create(customer *models.Customer) error {
	ret := _m.Called(customer)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Customer) error); ok {
		r0 = rf(customer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllByFilters provides a mock function with given fields: filters
func (_m *CustomersRepositoryInterface) GetAllByFilters(filters map[string]interface{}) ([]models.Customer, error) {
	ret := _m.Called(filters)

	var r0 []models.Customer
	if rf, ok := ret.Get(0).(func(map[string]interface{}) []models.Customer); ok {
		r0 = rf(filters)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Customer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]interface{}) error); ok {
		r1 = rf(filters)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOneById provides a mock function with given fields: id
func (_m *CustomersRepositoryInterface) GetOneById(id uint) (models.Customer, error) {
	ret := _m.Called(id)

	var r0 models.Customer
	if rf, ok := ret.Get(0).(func(uint) models.Customer); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Customer)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateOne provides a mock function with given fields: customer
func (_m *CustomersRepositoryInterface) UpdateOne(customer *models.Customer) error {
	ret := _m.Called(customer)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Customer) error); ok {
		r0 = rf(customer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
